BEGIN
 sys.rqScriptDrop('MODELPERFPRED');
 sys.rqScriptCreate('MODELPERFPRED','function(dat,srcdat, datastore_name){
            library(randomForest)  
            
            # Loading Trained Model from existing datastore
            ore.load(name = datastore_name)
            
            # Pulling into R Dataframe
            testdat <- ore.pull(dat)
            
            # Factors automatically converted to Character.
            # The primary key if converted to factor will be returned from testOriginal
            testOriginal <- ore.pull(dat)            
            
            ore.sync(table = srcdat)
            traindat <- ore.pull(ore.get(srcdat))
            
            # Equalizing labels for categorical variable between train and Test Dataset
            ## Find which columns are factors
            factor_cols <- names(testdat)[sapply(testdat,is.character)]            
            
            ## Converting training character columns to factor
            traindat[, factor_cols] <- lapply(traindat[, factor_cols], as.factor)
            testdat[, factor_cols] <- lapply(testdat[, factor_cols], as.factor)
            
            ## Changing the level
            for(i in factor_cols){
              levels(testdat[,i]) <- levels(traindat[,i])
            }
            
            # Predict
            predRF <- predict(object = modRF,newdata = testdat,type = "class")
            predRFprob <- predict(object = modRF,newdata = testdat,type = "prob")
            
            # Creating predicted probability and actual label predicted dataframe
            pred.df <- data.frame(EMPID=testOriginal[,1] ,PERF_2_PROB=as.double(predRFprob[,1]), PERF_3_PROB=as.double(predRFprob[,2]), PERF_4_PROB=as.double(predRFprob[,3]),PERF_5_PROB=as.double(predRFprob[,4]),PERF_PREDICTION = predRF)
            pred.df
    }');
END;
